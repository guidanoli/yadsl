set(YATESTER_OK 0)
set(YATESTER_ERROR 1)
set(YATESTER_NOMEM 2)
set(YATESTER_FTLERR 3)
set(YATESTER_IOERR 4)
set(YATESTER_STXERR 5)
set(YATESTER_BADCMD 6)
set(YATESTER_BADCALL 7)
set(YATESTER_BADARG 8)

# Add yatester module
#   source - source file
# add_yatester_module(source)
function(add_yatester_module source)
	get_filename_component(source_we ${source} NAME_WE)
	string(CONCAT name ${source_we} test)
	add_executable(${name} ${source})
	target_link_libraries(${name} yatester)
	set_target_properties(${name} PROPERTIES FOLDER tests)
endfunction()

# Add a test script for a yatester module
#   tgt - target created by add_yatester_module
#   script - script that will be run on the test
#   value - expected return value of the tester (default: YATESTER_OK)
#   name - test name (default: <script>)
# add_yatester_script(TARGET <tgt> SOURCE <script> [NAME <name>] [VALUE <value>])
function(add_yatester_script)
	set(one_value_keywords TARGET SOURCE VALUE NAME)
	cmake_parse_arguments(ARG "" "${one_value_keywords}" "" "${ARGN}")
	if(NOT DEFINED ARG_TARGET)
		message(FATAL_ERROR "TARGET not defined")
	endif()
	if(NOT DEFINED ARG_SOURCE)
		message(FATAL_ERROR "SOURCE not defined")
	endif()
	if(NOT DEFINED ARG_NAME)
		set(ARG_NAME ${ARG_SOURCE})
	endif()
	if(NOT DEFINED ARG_VALUE)
		set(ARG_VALUE ${YATESTER_OK})
	endif()
	get_filename_component(SOURCE_ABSOLUTE ${ARG_SOURCE} ABSOLUTE)
	set(COMMAND_ARGS ${ARG_TARGET} --input-file ${SOURCE_ABSOLUTE} --expect ${ARG_VALUE})
	add_test(NAME ${ARG_NAME} COMMAND ${COMMAND_ARGS})
endfunction()

if(NOT YADSL_BUILD_SELF_TESTS)
	return()
endif()

add_yatester_module(empty.test.c)
add_yatester_script(TARGET emptytest SOURCE empty.script NAME empty.1.script)
add_yatester_script(TARGET emptytest SOURCE empty.2.script)
add_yatester_script(TARGET emptytest SOURCE empty.3.script)

add_test(NAME empty.1.fail COMMAND emptytest --help)
add_test(NAME empty.2.fail COMMAND emptytest --list-commands)
add_test(NAME empty.3.fail COMMAND emptytest --input-file x --expect ${YATESTER_IOERR})

# No --expect will fail
add_test(NAME no_expect COMMAND emptytest --input-file x)
set_tests_properties(no_expect PROPERTIES WILL_FAIL TRUE)

# Wrong --expect will fail
add_test(NAME wrong_expect COMMAND emptytest --input-file x --expect ${YATESTER_NOMEM})
set_tests_properties(wrong_expect PROPERTIES WILL_FAIL TRUE)

if(CMAKE_BUILD_TYPE STREQUAL Debug)
	add_test(NAME empty.4.fail COMMAND emptytest --log-file / --expect ${YATESTER_IOERR})
	add_test(NAME empty.5.fail COMMAND emptytest --enable-log-channel x --expect ${YATESTER_ERROR})
	add_test(NAME empty.6.fail COMMAND emptytest --malloc-failing-countdown x --expect ${YATESTER_ERROR})
endif()

add_yatester_module(self.test.c)
add_yatester_script(TARGET selftest SOURCE self.1.script)
add_yatester_script(TARGET selftest SOURCE self.1.fail VALUE ${YATESTER_ERROR})
add_yatester_script(TARGET selftest SOURCE self.2.fail VALUE ${YATESTER_ERROR})
add_yatester_script(TARGET selftest SOURCE self.3.fail VALUE ${YATESTER_STXERR})
add_yatester_script(TARGET selftest SOURCE self.4.fail VALUE ${YATESTER_NOMEM})
add_yatester_script(TARGET selftest SOURCE self.6.fail VALUE ${YATESTER_STXERR})
add_yatester_script(TARGET selftest SOURCE self.7.fail VALUE ${YATESTER_STXERR})
add_yatester_script(TARGET selftest SOURCE self.8.fail VALUE ${YATESTER_STXERR})
add_yatester_script(TARGET selftest SOURCE self.9.fail VALUE ${YATESTER_STXERR})
add_yatester_script(TARGET selftest SOURCE self.10.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.11.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.12.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.13.fail VALUE ${YATESTER_ERROR})
add_yatester_script(TARGET selftest SOURCE self.14.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.15.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.16.fail VALUE ${YATESTER_BADCALL})
add_yatester_script(TARGET selftest SOURCE self.17.fail VALUE ${YATESTER_BADCALL})

foreach(IDX RANGE 1 12)
	add_yatester_module("badcommand${IDX}.test.c")
	add_yatester_script(TARGET "badcommand${IDX}test" SOURCE empty.script NAME "badcommand${IDX}.fail" VALUE ${YATESTER_BADCMD})
endforeach()
